[null,{"name":"<div style=\"color:green\"><center>Adminstratorskie</div>","permissions":"KICK_MEMBERS","restriction":"1","_id":"QEBeR","actions":[]},{"name":"kick","permissions":"KICK_MEMBERS","restriction":"1","_id":"otNVi","actions":[{"info":"1","infoIndex":"2","storage":"1","varName":"powod","name":"Store Command Params"},{"storage":"0","varName":"","reason":"","name":"Delete Message"},{"member":"0","varName":"","reason":"","name":"Kick Member"},{"channel":"0","varName":"","message":"**${member}** wyrzuci≈Ç **${mentionedUser}** z powodem ```${tempVars(\"powod\")}```","storage":"0","varName2":"","name":"Send Message"}]},{"name":"ban","permissions":"BAN_MEMBERS","restriction":"1","_id":"QRYCn","actions":[{"info":"1","infoIndex":"1","storage":"1","varName":"powod","name":"Store Command Params"},{"storage":"0","varName":"","reason":"","name":"Delete Message"},{"member":"0","varName":"","reason":"Zosta≈Çe≈õ zbanowany na naszym serwerze:\n\n{tempVars(\"powod\")}","days":"","name":"Ban Member"},{"channel":"0","varName":"","message":"**${member}** zbanowa≈Ç **${mentionedUser}** z powodem ```${tempVars(\"powod\")}```","storage":"0","varName2":"","name":"Send Message"}]},{"name":"clear","permissions":"MANAGE_MESSAGES","restriction":"1","_id":"mGUxi","actions":[{"storage":"0","varName":"","reason":"","name":"Delete Message"},{"info":"0","infoIndex":"1","storage":"1","varName":"ilosc","name":"Store Command Params"},{"channel":"0","count":"${tempVars(\"ilosc\")}","condition":"0","custom":"","varName":"","name":"Delete Bulk Messages"},{"channel":"0","varName":"","message":"`Wyczyszczono` **${tempVars(\"ilosc\")}** `wiadomo≈õci!`","storage":"1","varName2":"wiadomosc","name":"Send Message"},{"time":"2","measurement":"1","name":"Wait"},{"storage":"1","varName":"wiadomosc","reason":"","name":"Delete Message"}]},{"name":"<div style=\"color:orange\"><center>Muzyka</div>","permissions":"NONE","restriction":"1","_id":"tOWzz","actions":[]},{"name":"<div style=\"color:yellow\"><center>Ogolne</div>","permissions":"NONE","restriction":"1","_id":"ApKLT","actions":[]},{"name":"rolemenu","permissions":"NONE","restriction":"1","_id":"DtBMG","actions":[{"behavior":"1","interpretation":"1","code":"const Discord = require(\"discord.js\");\nconst fs = require('fs');\n\nvar rectarray = globalVars('reactionRoleInf');\n\nvar reactionArray = [];\nvar emojiArray = [];\nvar roleArray = [];\nvar embedSettings = [];\nvar roleMentionArray = [];\n\nconst _this = this;\n\nvar errorCatch = 5;\nvar emojiTimerRe = 0;\n\nvar localEmoji;\nvar localEmojiG;\nvar interval;\nvar mainMessage;\n\nlet embedTemplate = {\n    color: 0x00FF00,\n    author: {\n        name: client.user.username,\n        icon_url: client.user.avatarURL\n    },\n    title: \"Role Reaction Prompt\",\n    description: `Welcome to the autorole promt.\\n\\nPlease now respond with a **title** for your reaction embed!`,\n    timestamp: new Date(),\n};\n\n// Settings\nlet grabAllEmoji = false; // Default: false || Set true if you want the bot to use global emojis from all the servers its in. (May cause slowdowns in larger servers)\nlet roleLimit = 10; // Default: 10 || Sets the maximum number of roles attached to emojis.\nlet debug = false; // Default: false || Prints any errors that may have occured; will also print for await messages that ran out of time\n//\n\n\nif (grabAllEmoji) {\n    localEmoji = (client || this.getDBM().Bot.bot).emojis.cache.array();\n    localEmojiG = \"Please make sure the emoji you selected is in one of the servers that the bot is in!\";\n} else {\n    localEmoji = msg.guild.emojis.cache.array();\n    localEmojiG = \"Please make sure the emoji you selected is in this server!\";\n}\n\nif (msg.guild.me.hasPermission('MANAGE_ROLES')) {\n    if (msg.member.hasPermission('MANAGE_ROLES')) {\n        msg.channel.send({\n                embed: embedTemplate\n            })\n            .then(async (message) => {\n                await msg.guild.roles.fetch(true);\n                mainMessage = message;\n                askQuestion(`Welcome to the autorole promt.\\n\\nPlease now respond with a **title** for your reaction embed!`).then((response) => {\n                    embedSettings[0] = response.content;\n                    askQuestion(`Your embed title would be **${response.content}**\\n\\nIf you are sure with this title, please now respond with a **description** for your embed.\\nIf not, please respond with \"**cancel**\"`).then((response) => {\n                        embedSettings[1] = response.content;\n                        if (response.content.toLowerCase() != \"cancel\") {\n                            askQuestion(`Your embed title would be **${embedSettings[0]}** and your description would be:\\n\\n${embedSettings[1]}\\n\\nIf you are satisfyed with this, please respond with \"**confirm**\".\\nIf not, please respond with \"**cancel**\".`).then((response) => {\n                                if (response.content.toLowerCase() == \"confirm\") {\n                                    reAsk(message, \" \");\n                                } else {\n                                    errorMessage('Prompt cancelled by user request (did not respond with \"confirm\").\\nPlease re-execute the command to go through the prompt again!', \"User did not respond with confirm on description + title conformation message\");\n                                }\n                            })\n                        } else {\n                            errorMessage(\"Prompt has been cancelled by user request.\\nPlease re-execute the command to go through the prompt again!\", \"User responded with cancel thus cancelling the prompt\");\n                        }\n                    })\n                })\n            })\n    } else {\n        errorMessage(\"You do not have the `MANAGE ROLES` perimssion which is required to execute this command!\", \"User has no permission to execute the command.\");\n    }\n} else {\n    errorMessage(\"The bot does not have the `MANGE ROLES` permission which is required for the bot to remove and add roles!\", \"Bot has no permission to manage roles.\")\n}\n\nfunction reAsk(message, extra) {\n    if (extra == null) {\n        extra = \"\";\n    }\n    if (reactionArray.length != roleLimit) {\n        var finalText = \"\";\n        \n        for (i=0 ;i<reactionArray.length; i++) {\n            finalText = finalText + `${reactionArray[i][0]} => ${roleMentionArray[i]}\\n`\n        }\n\n        askQuestion(`Please now enter the **emoji-role** reaction connections (Max ${roleLimit})\\n ${finalText}\\n\\nIf you would like to attach another reaction to a role, please insert a role along with an emoji.\\nEx. ExampleRole üòÉ\\nIf not, please reply with \"**done**\".\\nIf you would like to cancel the prompt, please respond with \"cancel\"\\n\\n${extra}`).then(async (response) => {\n            if (response.content.toLowerCase() == \"done\") {\n                if (reactionArray.length > 0) {\n                    done(message);\n                } else {\n                    errorCheck(message, `**Please atleast attach 1 emoji to 1 role!\\nTries left - ${errorCatch}**`, \"Prompt has been cancelled, you used the same emoji twice for differnt roles!\\nPlease re-execute the command to go through the prompt again!\");\n                }\n            } else if (response.content.toLowerCase() == \"cancel\") {\n                errorMessage(\"Prompt has been cancelled.\\nPlease re-execute the command to go through the prompt again!\", \"User responded with cancel thus cancelling the prompt\", message);\n            } else {\n                var regString = response.content;\n                var execReg = /[^\\x00-\\x7F]/g.exec(regString) || /\\<:(.*?)\\>/g.exec(regString) || /\\<a:(.*?)\\>/g.exec(regString);\n                var msgSplitArr = null;\n\n                if (execReg != null) {\n                    msgSplitArr = [regString.substring(0, execReg[\"index\"]), regString.substring(execReg[\"index\"])];\n                }\n\n                if (msgSplitArr != null && msgSplitArr.length > 1 && msgSplitArr[0] != null && msgSplitArr[1] != null) {\n                    var tstValidRole;\n\n                    if (isNaN(msgSplitArr[0])) {\n                        var tempMSGSplit = msgSplitArr[0].replace(/\\s+$/, '');\n                        tstValidRole = await msg.guild.roles.cache.find(role => role.name.replace(/\\s+$/, '') == tempMSGSplit);\n                    } else {\n                        tstValidRole = await msg.guild.roles.fetch(msgSplitArr[0].replace(/\\s+$/, ''));\n                    }\n                    if (response.mentions.roles.first() != null && /\\<@(.*?)\\>/g.exec(msgSplitArr[1]) == null || tstValidRole != null) {\n                        var unicodeStored = msgSplitArr[1];\n                        if (response.mentions.roles.first() != null) {\n                            roleMentioned = response.mentions.roles.first();\n                        } else {\n                            roleMentioned = tstValidRole;\n                        }\n                        if (roleMentioned.position < msg.guild.me.roles.highest.position) {\n                            if (!roleArray.includes(roleMentioned.id) && !emojiArray.includes(unicodeStored)) {\n                                if (unicodeStored.includes(\"<:\") || unicodeStored.includes(\"<a:\")) {\n                                    var emoji;\n\n                                    unicodeStored = unicodeStored.replace(/\\D/g, '');\n                                    emoji = localEmoji.filter(emojiT => emojiT.id == unicodeStored);\n                                    if (emoji.length > 0) {\n                                        unicodeStored = emoji[0];\n                                        delete unicodeStored['guild']\n                                        reactionArray.push([unicodeStored, roleMentioned.id, roleMentioned.name]);\n                                        emojiArray.push(unicodeStored);\n                                        roleArray.push(roleMentioned.id);\n                                        roleMentionArray.push(roleMentioned);\n                                        reAsk(message);\n                                    } else {\n                                        errorCheck(message, `**Please provide a valid custom emoji!\\n${localEmojiG}\\nTries left - ${errorCatch}**`, `Prompt has been cancelled, you provided an invalid custom emoji!\\n${localEmojiG}\\nPlease re-execute the command to go through the prompt again!`)\n                                    }\n                                } else {\n                                    reactionArray.push([unicodeStored, roleMentioned.id, roleMentioned.name]);\n                                    emojiArray.push(unicodeStored);\n                                    roleArray.push(roleMentioned.id);\n                                    roleMentionArray.push(roleMentioned);\n                                    reAsk(message);\n                                }\n                            } else {\n                                errorCheck(message, `**Please don't use the same emoji/role twice!\\nTries left - ${errorCatch}**`, \"Prompt has been cancelled, you used the same role twice in the prompt!\\nPlease re-execute the command to go through the prompt again!\");\n                            }\n                        } else {\n                            errorCheck(message, `**The selected role's position is higher than the bot's highest role.\\nThis prevents the bot from giving the role.\\nTries left - ${errorCatch}**`)\n                        }\n                    } else {\n                        errorCheck(message, `**Please mention a valid role!\\nTries left - ${errorCatch}**`, \"Prompt has been cancelled, you didn't mention a valid role!\\nPlease re-execute the command to go through the prompt again!\");\n                    }\n                } else {\n                    errorCheck(message, `**Please provide a valid emoji/role!\\nTries left - ${errorCatch}**`, \"Prompt has been cancelled, you didn't provide a emoji/mentioned role!\\nPlease re-execute the command to go through the prompt again!\");\n                }\n            }\n        });\n    } else {\n        done(message);\n    }\n}\n\n\nfunction done(message) {\n    var finalText = \"\";\n\n    for (i=0; i<reactionArray.length; i++) {\n        finalText = finalText + `${reactionArray[i][0]} => ${roleMentionArray[i]}\\n`\n    }\n\n    askQuestion(`Final conformation menu\\n\\nBelow is the list of reactions to their roles\\n${finalText}\\n\\nIf this is correct, please respond with a **mention** to a **text channel** where the role menu will be sent.\\nIf this isn't correct, respond with \"**cancel**\" to cancel the prompt.`).then((response) => {\n        if (response.mentions.channels.first()) {\n            var menchannel = response.mentions.channels.first()\n            message.delete();\n            menchannel.send({\n                    embed: {\n                        color: 0xffff00,\n                        title: embedSettings[0],\n                        description: `${embedSettings[1]}\\n\\n${finalText}`,\n                        timestamp: new Date()\n                    }\n                })\n                .then(embedmessage => {\n                    interval = setInterval(function() {\n                        emojiTimerInt(embedmessage, reactionArray);\n                    }, 500)\n                    rectarray[embedmessage.id] = reactionArray\n                    _this.storeValue(rectarray, 3, \"reactionRoleInf\", cache);\n                    fs.writeFile(\"./data/roleReaciton/reactionRoleData.json\", JSON.stringify(rectarray), function(err) {\n                        if (err) {\n                            return console.log(err);\n                        }\n                    });\n                });\n        } else {\n            errorMessage(\"You did not mention a valid channel!\\nPlease re-execute the command to go through the prompt again!\", \"User did not respond with a valid channel and thus cancelling the prompt.\", message);\n        }\n    });\n}\n\nfunction emojiTimerInt(message, subarray) {\n    message.react(subarray[emojiTimerRe][0])\n    emojiTimerRe += 1;\n\n    if (emojiTimerRe == subarray.length) {\n        clearInterval(interval);\n    }\n}\n\nfunction errorMessage(error, errorCause = \"none\") {\n\n    if (debug) {\n        console.log(errorCause);\n    }\n\n    if (mainMessage != null) {\n        mainMessage.delete();\n    }\n\n    let errorTemplate = {\n        color: 0xFF0000,\n        author: {\n            name: client.user.username,\n            icon_url: client.user.avatarURL\n        },\n        title: \"Role Reaction Prompt\",\n        description: error,\n        timestamp: new Date(),\n    };\n\n    msg.channel.send({\n        embed: errorTemplate\n    });\n}\n\nfunction errorCheck(mainMessage, erMsgCatch, erMsgFail) {\n    if (errorCatch > 0) {\n        errorCatch -= 1;\n        reAsk(mainMessage, erMsgCatch)\n    } else {\n        errorMessage(erMsgFail, \"User ran out of attempts and thus the prompt get cancelled.\", mainMessage);\n    }\n}\n\n\nfunction askQuestion(question) {\n    return new Promise(function(resolve, reject) {\n        embedTemplate[\"description\"] = question;\n        mainMessage.edit({\n            embed: embedTemplate\n        });\n        msg.channel.awaitMessages(response => response.author.id == msg.author.id, {\n                max: 1,\n                time: 60000,\n                errors: ['time'],\n            })\n            .then(function(collected) {\n                msg.author.lastMessage.delete();\n                resolve(collected.first());\n            }).catch((error) => {\n                errorMessage('Sorry, you didnt provide a valid response in time!\\nPlease re-execute the command to go through the prompt again!', error);\n            });\n    })\n\n}\n\n// VersionCheck:4","storage":"0","varName":"","name":"Run Script"}],"comType":"0"},{"name":"report","permissions":"NONE","restriction":"1","_id":"jETiD","actions":[{"condition":"1","comparison":"0","value":"1","iftrue":"3","iftrueVal":"4","iffalse":"0","iffalseVal":"","name":"Check Parameters"},{"title":"","author":"","color":"","timestamp":"false","url":"","authorIcon":"","imageUrl":"","thumbUrl":"","storage":"1","varName":"embediro_ERROR1","name":"Create Embed Message"},{"storage":"1","varName":"embediro_ERROR1","message":"Oznacz u≈ºytkownika kt√≥rego chcesz zg≈Çosiƒá!","name":"Set Embed Description"},{"storage":"1","varName":"embediro_ERROR1","channel":"0","varName2":"","storage3":"0","varName3":"","name":"Send Embed Message"},{"name":"End Action Sequence"},{"condition":"0","comparison":"2","value":"0","iftrue":"3","iftrueVal":"4","iffalse":"0","iffalseVal":"","name":"Check Parameters"},{"title":"","author":"","color":"","timestamp":"false","url":"","authorIcon":"","imageUrl":"","thumbUrl":"","storage":"1","varName":"embediro_ERROR2","name":"Create Embed Message"},{"storage":"1","varName":"embediro_ERROR2","message":"Napisz pow√≥d zg≈Çoszenia!","name":"Set Embed Description"},{"storage":"1","varName":"embediro_ERROR2","channel":"0","varName2":"","storage3":"0","varName3":"","name":"Send Embed Message"},{"name":"End Action Sequence"},{"storage":"0","varName":"","reason":"","name":"Delete Message"},{"info":"2","infoIndex":"1","storage":"1","varName":"user","name":"Store Command Params"},{"info":"0","infoIndex":"2","storage":"1","varName":"reason","name":"Store Command Params"},{"info":"1","find":"üîê„Éªzgloszenia","storage":"1","varName":"üîê„Éªzgloszenia","name":"Find Channel"},{"member":"0","varName":"","info":"1","storage":"1","varName2":"id","name":"Store Member Info"},{"member":"1","varName":"","info":"2","storage":"1","varName2":"user_name","name":"Store Member Info"},{"member":"0","varName":"","info":"16","storage":"1","varName2":"AVATAR_ZGL","name":"Store Member Info"},{"member":"0","varName":"","info":"16","storage":"1","varName2":"AVATAR_TYPA","name":"Store Member Info"},{"title":"","author":"Dodano nowe zg≈Çoszenie!","color":"#E60EF1","timestamp":"true","url":"","authorIcon":"${tempVars(\"AVATAR_ZGL\")}","imageUrl":"","thumbUrl":"${tempVars(\"AVATAR_TYPA\")}","storage":"1","varName":"reported4","name":"Create Embed Message"},{"storage":"1","varName":"reported4","message":"„ÉªZg≈ÇaszajƒÖcy: **${member}**\n„ÉªZg≈Çoszony u≈ºytkownik: **${mentionedUser}\n„ÉªPow√≥d zg≈Çoszenia: **${tempVars(\"reason\")}**","name":"Set Embed Description"},{"storage":"1","varName":"reported4","message":"‚úî - Przyjmujemy! „Éª ‚úñ - Odrzucamy","footerIcon":"","name":"Set Embed Footer"},{"storage":"1","varName":"reported4","channel":"5","varName2":"üîê„Éªzgloszenia","storage3":"0","varName3":"","name":"Send Embed Message"},{"channel":"0","varName":"","message":"**Dziƒôkujemy!** Twoje zg≈Çoszenie zosta≈Ço wys≈Çane do naszej `Administracji`!","storage":"1","varName2":"send","name":"Send Message"},{"channel":"3","varName":"üîê„Éªzgloszenia","info":"4","storage":"1","varName2":"lastmsg","name":"Store Channel Info"},{"storage":"1","varName":"lastmsg","emoji":"4","varName2":"‚úî","varName3":"","name":"Add Reaction"},{"storage":"1","varName":"lastmsg","emoji":"4","varName2":"‚úñ","varName3":"","name":"Add Reaction"},{"time":"5","measurement":"1","name":"Wait"},{"storage":"1","varName":"send","reason":"","name":"Delete Message"}]},{"name":"help","permissions":"NONE","restriction":"1","_id":"MNnbc","actions":[{"channel":"0","varName":"","message":"```\nMoje komendy to:\n\nHelp:\n\nhelpogolne\nhelpadm\n```","storage":"0","varName2":"","name":"Send Message"}]},{"name":"helpogolne","permissions":"NONE","restriction":"1","_id":"bWEtN","actions":[{"channel":"0","varName":"","message":"```\nMoje komendy to:\n\nOg√≥lne:\nreport\nhelp\n```","storage":"0","varName2":"","name":"Send Message"}]},{"name":"helpadm","permissions":"NONE","restriction":"1","_id":"SZyZR","actions":[{"channel":"0","varName":"","message":"```\nMoje komendy to:\n\nAdministracyjne\nban\nkick\nclear\n```","storage":"0","varName2":"","name":"Send Message"}]},{"name":"<div style=\"color:red\"><center>NieDzia≈ÇajƒÖce</div>","permissions":"NONE","restriction":"1","_id":"QSZYT","actions":[]}]